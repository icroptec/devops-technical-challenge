name: Deploy Dev

on:
  push:
    branches: ["dev"]

env:
  AWS_REGION: eu-west-1
  PROJECT_NAME: openweather-proxy
  ENVIRONMENT: dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_DEV }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Terraform apply infra
        working-directory: infra/terraform
        run: |
          terraform init -input=false
          terraform workspace select dev || terraform workspace new dev
          terraform apply -auto-approve -var-file=environments/dev/terraform.tfvars
          echo "ECR_REPO=$(terraform output -raw ecr_repo)" >> $GITHUB_ENV
          echo "ALB_URL=$(terraform output -raw alb_url)" >> $GITHUB_ENV

      - name: Build and push Docker image
        run: |
          COMMIT=${GITHUB_SHA::7}
          IMAGE=${ECR_REPO}:${COMMIT}
          docker build -t "$IMAGE" .
          docker push "$IMAGE"
          echo "IMAGE_URI=$IMAGE" >> $GITHUB_ENV

      - name: Update ECS service with new image
        working-directory: infra/terraform
        run: |
          terraform apply -auto-approve -var-file=environments/dev/terraform.tfvars -var="image=${IMAGE_URI}"

      - name: Show app URL
        run: echo "App DEV: $ALB_URL"
